package nl.errorsoft.esqlmanager.gui;
/*
 * ExportAsSQLUI.java
 *
 * Created on 29 april 2003, 11:50
 */
import nl.errorsoft.esqlmanager.control.*;
import nl.errorsoft.esqlmanager.domain.*;
import javax.swing.*;
import javax.swing.tree.*;
import javax.swing.event.*;
import java.awt.event.*;
/**
 *
 * @author  CoolKillaH
 */
public class ExportAsSQLUI extends javax.swing.JDialog implements ActionListener
{
   private ESQLManagerUI jm;
	private ExportCC ecc;	
	private DatabaseTreeView dtv;
    
	public ExportAsSQLUI(ESQLManagerUI jm,ExportCC ecc)
	{	
		super((JFrame)jm, false);
		this.jm = jm;
		this.ecc = ecc;
		this.getRootPane().setPreferredSize( new java.awt.Dimension( 560, 320 ) );
		this.initComponents();
		this.setTitle("Export data");
		this.setResizable(false);
		this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
		this.setLocation(jm.getLocation().x + (int)((jm.getSize().width - this.getSize().width) / 2), jm.getLocation().y + (int)((jm.getSize().height - this.getSize().height) / 2));
		this.setVisible( true );
		this.toFront();
    }

	public DatabaseTreeView getDatabaseTreeView()
	{
		return dtv;
	}	

	// Shows the database tree.
	public void showDatabaseTreeView( final DatabaseTreeView tv )
	{
		dtv = tv;
		jScrollPane1.getViewport().add( dtv );
		dtv.addTreeSelectionListener( new TreeSelectionListener()
		{
			public void valueChanged( TreeSelectionEvent e )
			{
				if( e.isAddedPath() )
				{
					final DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)e.getPath().getLastPathComponent();
					
					if( selectedNode.getUserObject() instanceof Database )
					{					
						if( selectedNode.getChildCount() <= 0 )
						{
							databaseSelected( (Database)selectedNode.getUserObject() );
						}
					}
					if( selectedNode.getUserObject() instanceof Table )
					{					
						tv.removeSelectionPath( new TreePath(((DefaultMutableTreeNode)selectedNode.getParent() ).getPath()) );
					}					
				}
			}
		});
	}	
	
	public void databaseSelected( Database db )
	{
		ecc.showTables( this, db );
	}    

	public void actionPerformed( ActionEvent e )
	{
		Object src = e.getSource();
		
		if( src == jButton3 )
		{
			this.dispose();
		}
		else if( src == jButton1 )
		{
			JFileChooser chooser = new JFileChooser();
			chooser.setAcceptAllFileFilterUsed( true );  
			chooser.setDialogTitle("Select a (new) file...");   		
				
		   try
		   {
		    	if( chooser.showSaveDialog( jm ) == JFileChooser.APPROVE_OPTION ) 
		    	{
					this.jTextField1.setText( chooser.getSelectedFile().getAbsolutePath() );
				}
			}
			catch( Exception err )
			{
			}
		}	
		else if( src == jButton2 )
		{
			if( jTextField1.getText().trim().length() <= 0 )
				showErrorMessage("No file selected!");
			else
				ecc.exportNodesAsSQL( this, dtv.getSelectionPaths(), jTextField1.getText(), jCheckBox1.isSelected(), jCheckBox2.isSelected(), jCheckBox3.isSelected(), jCheckBox5.isSelected(), jCheckBox4.isSelected() );
		}
	}

	public void showMessage(String message)
	{
		JOptionPane pane = new JOptionPane();  
  		pane.showMessageDialog( this, message, this.getTitle(), JOptionPane.INFORMATION_MESSAGE );  					
	}	
	
	public void showErrorMessage(String message)
	{
		JOptionPane pane = new JOptionPane();  
  		pane.showMessageDialog( this, message, this.getTitle(), JOptionPane.WARNING_MESSAGE );  					
	}	
	    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
   private void initComponents() 
	{
		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jPanel3 = new javax.swing.JPanel();
		jCheckBox1 = new javax.swing.JCheckBox("Dump table structure", true);
		jCheckBox2 = new javax.swing.JCheckBox("Dump table data", true);
		jCheckBox3 = new javax.swing.JCheckBox("Include `CREATE DATABASE` statements", true);
		jCheckBox4 = new javax.swing.JCheckBox("Include `USE DATABASE` statements", true);
		jCheckBox5 = new javax.swing.JCheckBox("Include `DROP TABLE` statements", true);
		jPanel4 = new javax.swing.JPanel();
		jTextField1 = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		
		getContentPane().setLayout(null);
		
		addWindowListener(new java.awt.event.WindowAdapter() {
		   public void windowClosing(java.awt.event.WindowEvent evt) {
		       closeDialog(evt);
		   }
		});
		
		jPanel1.setLayout(null);
		
		jPanel2.setLayout(null);
		
		jPanel2.setBorder(new javax.swing.border.TitledBorder(null, "Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
		jLabel1.setText("Select the database(s) / table(s) you would like to export on the left");
		jPanel2.add(jLabel1);
		jLabel1.setBounds(20, 20, 330, 15);
		
		jPanel1.add(jPanel2);
		jPanel2.setBounds(10, 10, 370, 50);
		jPanel3.setLayout(null);
		
		jPanel3.setBorder(new javax.swing.border.TitledBorder(null, "Export options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
		jCheckBox1.setText("Dump table structure");
		jPanel3.add(jCheckBox1);
		jCheckBox1.setBounds(15, 25, 330, 20);
		
		jCheckBox2.setText("Dump table data");
		jPanel3.add(jCheckBox2);
		jCheckBox2.setBounds(15, 45, 340, 20);
		
		jCheckBox3.setText("Include `CREATE DATABASE` statements");
		jPanel3.add(jCheckBox3);
		jCheckBox3.setBounds(15, 65, 340, 20);
		
		jCheckBox4.setText("Include `USE DATABASE` statements");
		jPanel3.add(jCheckBox4);
		jCheckBox4.setBounds(15, 105, 340, 20);
		
		jCheckBox5.setText("Include `DROP TABLE` statements");
		jPanel3.add(jCheckBox5);
		jCheckBox5.setBounds(15, 85, 340, 20);
		
		jPanel1.add(jPanel3);
		jPanel3.setBounds(10, 70, 370, 140);
		
		jPanel4.setLayout(null);
		jPanel4.setBorder(new javax.swing.border.TitledBorder(null, "Save as", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
		jTextField1.setEditable(false);
		jPanel4.add(jTextField1);
		jTextField1.setBounds(10, 20, 260, 21);
		
		jButton1.setText("Browse...");
		jButton1.addActionListener( this );
		jPanel4.add(jButton1);
		jButton1.setBounds(270, 20, 90, 21);
		
		jPanel1.add(jPanel4);
		jPanel4.setBounds(10, 220, 370, 50);
		
		jButton2.setText("Export");
		jButton2.addActionListener( this );
		jPanel1.add(jButton2);
		jButton2.setBounds(175, 285, 100, 23);
		
		jButton3.setText("Close");
		jButton3.addActionListener( this );
		jPanel1.add(jButton3);
		jButton3.setBounds(280, 285, 100, 23);
		
		getContentPane().add(jPanel1);
		jPanel1.setBounds(170, 0, 390, 320);
		
		getContentPane().add(jScrollPane1);
		jScrollPane1.setBounds(0, 0, 170, 322);
		
		pack();
	}

	/** Closes the dialog */
	private void closeDialog(java.awt.event.WindowEvent evt) {
	  setVisible(false);
	  dispose();
	}
    
	// Variables declaration - do not modify
	private javax.swing.JButton jButton2;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JCheckBox jCheckBox3;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JButton jButton1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JButton jButton3;
	private javax.swing.JCheckBox jCheckBox5;
	private javax.swing.JCheckBox jCheckBox4;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JCheckBox jCheckBox2;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JCheckBox jCheckBox1;
   // End of variables declaration
    
}