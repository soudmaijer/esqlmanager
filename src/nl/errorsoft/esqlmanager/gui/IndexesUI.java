/*
 * JDialog.java
 *
 * Created on 9 april 2003, 20:53
 */
package nl.errorsoft.esqlmanager.gui;

import nl.errorsoft.esqlmanager.control.*;
import nl.errorsoft.esqlmanager.domain.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;

/**
 *
 * @author  CoolKillaH
 */
 
public class IndexesUI extends javax.swing.JDialog implements ActionListener {

	private IndexesCC tcc;
		
    /** Creates new form JDialog */
    public IndexesUI( JFrame parent, IndexesCC tcc ) 
    {
        super(parent, false);
        this.setResizable( false );
        this.tcc = tcc;
        initComponents();
        this.setLocation( parent.getLocation().x + (int)((parent.getSize().width - this.getSize().width) / 2), parent.getLocation().y + (int)((parent.getSize().height - this.getSize().height) / 2));
        this.setVisible( true );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() 
    {
    		this.getRootPane().setPreferredSize( new Dimension( 370, 380 ) );
        jpIndexes = new javax.swing.JPanel();
        jcmbIndexes = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jbtnAdd = new javax.swing.JButton();
        jbtnPrimary = new javax.swing.JButton();
        jpColumns = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlstUsed = new javax.swing.JList();
        jbtnRemoveFromList = new javax.swing.JButton();
        jbtnAddToList = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlstAvail = new javax.swing.JList();
        jlblUsed = new javax.swing.JLabel();
        jlblAvail = new javax.swing.JLabel();
        jpIndexType = new javax.swing.JPanel();
        jrdUnique = new javax.swing.JCheckBox();
        jrdFulltext = new javax.swing.JCheckBox();
        jbtnUpdate = new javax.swing.JButton();
        jbtnClose = new javax.swing.JButton();
        jbtnDrop = new javax.swing.JButton();

        getContentPane().setLayout(null);

        setTitle("Index(es)");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jpIndexes.setLayout(null);

        jpIndexes.setBorder(new javax.swing.border.TitledBorder(null, "Indexes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        jpIndexes.add(jcmbIndexes);
        jcmbIndexes.setBounds(60, 30, 260, 21);

        jLabel1.setText("Name:");
        jpIndexes.add(jLabel1);
        jLabel1.setBounds(10, 30, 34, 20);

        jbtnAdd.setText("Add");
        jbtnAdd.addActionListener( this );
        jpIndexes.add(jbtnAdd);
        jbtnAdd.setBounds(240, 60, 80, 25);

        jbtnPrimary.setText("Add Primary");
        jbtnPrimary.addActionListener( this );
        jpIndexes.add(jbtnPrimary);
        jbtnPrimary.setBounds(135, 60, 100, 25);

        getContentPane().add(jpIndexes);
        jpIndexes.setBounds(15, 15, 340, 105);

        jpColumns.setLayout(null);

        jpColumns.setBorder(new javax.swing.border.TitledBorder(null, "Columns", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        jScrollPane1.setViewportView(jlstUsed);

        jpColumns.add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 140, 100);

        jbtnRemoveFromList.setFont(new java.awt.Font("Dialog", 1, 11));
        jbtnRemoveFromList.setText(">");
        jbtnRemoveFromList.addActionListener( this );
        jpColumns.add(jbtnRemoveFromList);
        jbtnRemoveFromList.setBounds(150, 90, 40, 20);

        jbtnAddToList.setFont(new java.awt.Font("Dialog", 1, 11));
        jbtnAddToList.setText("<");
        jbtnAddToList.addActionListener( this );
        jpColumns.add(jbtnAddToList);
        jbtnAddToList.setBounds(150, 70, 40, 20);

        jScrollPane2.setViewportView(jlstAvail);

        jpColumns.add(jScrollPane2);
        jScrollPane2.setBounds(190, 40, 140, 100);

        jlblUsed.setText("Used:");
        jlblUsed.setToolTipText("Used:");
        jpColumns.add(jlblUsed);
        jlblUsed.setBounds(10, 20, 28, 15);

        jlblAvail.setText("Available:");
        jlblAvail.setToolTipText("null");
        jpColumns.add(jlblAvail);
        jlblAvail.setBounds(190, 20, 80, 15);

        getContentPane().add(jpColumns);
        jpColumns.setBounds(15, 125, 340, 150);

        jpIndexType.setLayout(null);

        jpIndexType.setBorder(new javax.swing.border.TitledBorder(null, "Index type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        jrdUnique.setText("Unique");
        jrdUnique.addActionListener( this );
        jpIndexType.add(jrdUnique);
        jrdUnique.setBounds(10, 20, 59, 23);

        jrdFulltext.setText("Fulltext");
        jrdFulltext.addActionListener( this );
        jpIndexType.add(jrdFulltext);
        jrdFulltext.setBounds(80, 20, 59, 23);

        getContentPane().add(jpIndexType);
        jpIndexType.setBounds(15, 280, 340, 50);

        jbtnUpdate.setText("Update");
        jbtnUpdate.addActionListener( this );

        getContentPane().add(jbtnUpdate);
        jbtnUpdate.setBounds(70, 340, 90, 25);

        jbtnClose.setText("Close");
        getContentPane().add(jbtnClose);
        jbtnClose.setBounds(260, 340, 90, 25);
        jbtnClose.addActionListener( this );

        jbtnDrop.setText("Drop");
        jbtnDrop.addActionListener( this );
        getContentPane().add(jbtnDrop);
        jbtnDrop.setBounds(165, 340, 90, 25);

        pack();
    }

	public void showMessage(String message)
	{
		JOptionPane pane = new JOptionPane();  
  		pane.showMessageDialog( this, message, this.getTitle(), JOptionPane.INFORMATION_MESSAGE );  					
	}	
	
	public void showErrorMessage(String message)
	{
		JOptionPane pane = new JOptionPane();  
  		pane.showMessageDialog( this, message, this.getTitle(), JOptionPane.WARNING_MESSAGE );  					
	}    

    public void actionPerformed(java.awt.event.ActionEvent evt) {
        
		if( evt.getSource() == this.jbtnClose )
		{ 	this.dispose();
      }
		else if( evt.getSource() == jbtnRemoveFromList )
		{	
			if( jlstUsed.getSelectedValue() instanceof TableColumn )
			{
				TableColumn temp = (TableColumn)jlstUsed.getSelectedValue();
				((DefaultListModel)jlstUsed.getModel()).removeElement(temp);
				((DefaultListModel)jlstAvail.getModel()).addElement(temp);
				
			}
		}
		else if( evt.getSource() == jbtnAddToList )
		{
			if( jlstAvail.getSelectedValue() instanceof TableColumn )
			{
				TableColumn temp = (TableColumn)jlstAvail.getSelectedValue();
				((DefaultListModel)jlstAvail.getModel()).removeElement(temp);
				((DefaultListModel)jlstUsed.getModel()).addElement(temp);
			}
		}
		else if( evt.getSource() == jrdFulltext )
		{
			jrdUnique.setSelected( false );			
		}
		else if( evt.getSource() == jrdUnique )
		{
			jrdFulltext.setSelected( false );			
		}		
		else if( evt.getSource() == this.jbtnDrop )
		{
			if( jcmbIndexes.getSelectedItem() != null && jcmbIndexes.getSelectedItem() instanceof TableIndex )
				this.tcc.dropIndex( (TableIndex)jcmbIndexes.getSelectedItem() );
		}
		else if( evt.getSource() == this.jbtnAdd )
		{
			String input = JOptionPane.showInputDialog(this, "Enter index name", "New index", JOptionPane.INFORMATION_MESSAGE );
			
			if( input != null )
			{
				tcc.addNew( input );
			}		
		}		
		else if( evt.getSource() == this.jbtnPrimary )
		{
			tcc.addPrimary();
		}
		else if( evt.getSource() == jbtnUpdate )
		{
			if( jcmbIndexes.getSelectedItem() != null && jcmbIndexes.getSelectedItem() instanceof TableIndex )
			{	
				DefaultListModel dlm = ((DefaultListModel)jlstUsed.getModel());
				TableColumn [] tc = new TableColumn[dlm.getSize()];
				
				for( int i=0; i<dlm.getSize(); i++ )
					tc[i] = (TableColumn)dlm.elementAt(i);				
				
				String type = "INDEX";
				
				if( jrdFulltext.isSelected() )
					type = "FULLTEXT";
				else if( jrdUnique.isSelected() )
					type = "UNIQUE";
				
				this.tcc.modifyIndex( (TableIndex)jcmbIndexes.getSelectedItem(), tc, type );
			}			
		}
    }

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {
        setVisible(false);
        dispose();
    }

	public void loadIndexes( TableIndex [] tia )
	{
		this.jcmbIndexes.setModel( new DefaultComboBoxModel() );
		
		if( tia == null || tia.length == 0 )
			return;
			
		for( int i=0; i<tia.length; i++ )
		{
			if( tia[i].isPrimary() )
				this.jbtnPrimary.setEnabled( false );
			this.jcmbIndexes.addItem( tia[i] );
		}
		
		this.itemSelected( tia[0] );
		this.jcmbIndexes.addItemListener( new ItemListener()
		{
			public void itemStateChanged( ItemEvent e )
			{
				if( jcmbIndexes.getSelectedItem() != null && jcmbIndexes.getSelectedItem() instanceof TableIndex )
				{	
					TableIndex ti = (TableIndex)jcmbIndexes.getSelectedItem();
					itemSelected( ti );	
					
				}
			}	
		});
	}

	public void addNewIndex( TableIndex ti, TableColumn tc[] )
	{
		DefaultListModel dlmUsed = new DefaultListModel();
		DefaultListModel dlmAvail = new DefaultListModel();
		jcmbIndexes.addItem( ti );
		jcmbIndexes.setSelectedItem( ti );
		
		for( int i=0; i<tc.length; i++ )
		{
			dlmAvail.addElement( tc[i] );
		}		
		
		jlstUsed.setModel( dlmUsed );
		jlstAvail.setModel( dlmAvail );		
	}

	public void itemSelected( TableIndex index )
	{
		TableColumn [] used = index.getTableColumns();
		TableColumn [] avail = index.getTable().getColumns();
		DefaultListModel dlmUsed = new DefaultListModel();
		DefaultListModel dlmAvail = new DefaultListModel();
		
		this.jrdUnique.setSelected( false );
		this.jrdFulltext.setSelected( false );
		
		if( index.isUnique() )
		{
			this.jrdUnique.setSelected( true );
		}	
		else if( index.isFulltext() )
		{
			this.jrdFulltext.setSelected( true );
		}	
		if( index.isPrimary() )
		{
			jrdUnique.setEnabled( false );
			jrdFulltext.setEnabled( false );
		}
		else
		{
			jrdUnique.setEnabled( true );
			jrdFulltext.setEnabled( true );
		}
		
		for( int i=0; i<avail.length; i++ )
		{
			dlmAvail.addElement( avail[i] );
		}
		
		// Clear used list.
		if( used == null || used.length == 0 )
		{	
			jlstUsed.setModel( dlmUsed );
			return;
		}
		
		for( int i=0; i<used.length; i++ )
		{
			dlmUsed.addElement( used[i] );
			dlmAvail.removeElement( used[i] );
		}
		
		jlstUsed.setModel( dlmUsed );
		jlstAvail.setModel( dlmAvail );
	}
	
    // Variables declaration - do not modify
    private javax.swing.JButton jbtnClose;
    private javax.swing.JButton jbtnAdd;
    private javax.swing.JPanel jpIndexType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox jcmbIndexes;
    private javax.swing.JButton jbtnDrop;
    private javax.swing.JPanel jpColumns;
    private javax.swing.JButton jbtnRemoveFromList;
    private javax.swing.JList jlstAvail;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnPrimary;
    private javax.swing.JCheckBox jrdUnique;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JLabel jlblUsed;
    private javax.swing.JCheckBox jrdFulltext;
    private javax.swing.JButton jbtnAddToList;
    private javax.swing.JList jlstUsed;
    private javax.swing.JPanel jpIndexes;
    private javax.swing.JLabel jlblAvail;
    // End of variables declaration

}
