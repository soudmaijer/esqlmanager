/*
 * RegistrationUI.java
 *
 * Created on 12 september 2003, 12:31
 */

package esql.gui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import esql.domain.*;
import esql.control.*;

/**
 *
 * @author  CoolKillaH
 */
public class RegistrationUI extends javax.swing.JDialog implements ActionListener, KeyListener {
	
	private ESQLManagerCC ecc;
	private ESQLManagerUI jm;
	private Registration reg;
	
    /** Creates new form RegistrationUI */
    public RegistrationUI( ESQLManagerUI jm, ESQLManagerCC ecc, Registration reg ) {
		
		super((JFrame)jm, false);
		this.ecc = ecc;
		this.reg = reg;
		this.setResizable( false );
		this.jm = jm;
		jm.setEnabled( false );
		this.setTitle("Register eSQLManager");
		initComponents();
		this.setLocation( jm.getLocation().x + (int)((jm.getSize().width - this.getSize().width) / 2), jm.getLocation().y + (int)((jm.getSize().height - this.getSize().height) / 2) );
		
		if( reg.isRegistered() )
		{
			txtRegKey.setEnabled( false );
			txtEmail.setEnabled( false );
			txtUsername.setText( reg.getUsername() );
			txtUsername.setEnabled( false );
			btnRegister.setEnabled( false );
			this.setTitle("eSQLManager is registered to: "+ reg.getUsername() );
		}
		else
		{
			btnUnregister.setEnabled( false );
		}
		
		this.toFront();
		show();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()
    {
        
        this.getRootPane().setPreferredSize( new java.awt.Dimension( 480, 205 ) );
        jpRegistration = new javax.swing.JPanel();
        txtChallenge = new javax.swing.JTextField();
        txtRegKey = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        btnUnregister = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jpRegistration.setLayout(null);

        jpRegistration.setBorder(new javax.swing.border.TitledBorder(null, "Registration details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 11)));
        txtChallenge.setEditable(false);
        jpRegistration.add(txtChallenge);
        txtChallenge.setBounds(130, 80, 300, 20);

        jpRegistration.add(txtRegKey);
        txtRegKey.setBounds(130, 105, 300, 20);

        jpRegistration.add(txtEmail);
        txtEmail.setBounds(130, 55, 300, 20);
        txtEmail.addKeyListener( this );

        jpRegistration.add(txtUsername);
        txtUsername.setBounds(130, 30, 300, 20);
        txtUsername.addKeyListener( this );

        btnRegister.setText("Register");
        btnRegister.addActionListener( this );
        jpRegistration.add(btnRegister);
        btnRegister.setBounds(245, 140, 90, 24);

        btnUnregister.setText("Revoke");
        btnUnregister.addActionListener( this );
        jpRegistration.add(btnUnregister);
        btnUnregister.setBounds(150, 140, 90, 24);
		
        btnClose.setText("Close");
        btnClose.addActionListener( this );
        jpRegistration.add(btnClose);
        btnClose.setBounds(340, 140, 90, 24);

        jLabel4.setText("Registration Key");
        jpRegistration.add(jLabel4);
        jLabel4.setBounds(20, 105, 110, 20);

        jLabel3.setText("Challenge Key");
        jpRegistration.add(jLabel3);
        jLabel3.setBounds(20, 80, 100, 20);

        jLabel2.setText("Email Address");
        jpRegistration.add(jLabel2);
        jLabel2.setBounds(20, 55, 100, 20);

        jLabel1.setText("Username");
        jpRegistration.add(jLabel1);
        jLabel1.setBounds(20, 30, 100, 20);

        getContentPane().add(jpRegistration);
        jpRegistration.setBounds(15, 15, 450, 180);

        pack();
    }
    
    public void actionPerformed( ActionEvent e )
    {
    	if( e.getSource() == this.btnClose )
    	{
			closeApp();
    	}
    	else if( e.getSource() == this.btnRegister )
    	{
    		if( txtUsername.getText().trim().length() <= 2 )
    		{
    			showErrorMessage("Your username should at least be 3 characters long!");
    			return;
    		}
    		if( txtRegKey.getText().trim().length() <= 0 )
    		{
    			showErrorMessage("No registration key entered!");
    			return;
    		}
    		    		
    		if( reg.register( txtUsername.getText(), txtEmail.getText(), txtRegKey.getText() ) )
    			showMessage("Registration succesfull!");
    		else
    			showErrorMessage("Registration failed, please try again!");
    		
    	}
    	else if( e.getSource() == this.btnUnregister )
    	{
			int result = JOptionPane.showConfirmDialog( this, "Are you sure you want revoke the license?", "Drop license", JOptionPane.YES_NO_OPTION );
			
			if( result == JOptionPane.YES_OPTION )
			{
	    		reg.unregister();
				txtRegKey.setEnabled( true );
				txtEmail.setEnabled( true );
				txtUsername.setEnabled( true );
				btnRegister.setEnabled( true );    		
				btnUnregister.setEnabled( false );    		
	
				txtUsername.setText( "" );
				txtEmail.setText( "" );
				txtRegKey.setText( "" );
			}
    	}
    }
	
	public void showMessage(String message)
	{
		JOptionPane pane = new JOptionPane();  
  		pane.showMessageDialog( this, message, this.getTitle(), JOptionPane.INFORMATION_MESSAGE );  					
	}	
	
	public void showMessage(String title, String message)
	{
		JOptionPane pane = new JOptionPane();  
  		pane.showMessageDialog( this, message, title, JOptionPane.INFORMATION_MESSAGE );  					
	}	
	 	
	public void showErrorMessage(String message)
	{
		JOptionPane pane = new JOptionPane();  
  		pane.showMessageDialog( this, message, this.getTitle(), JOptionPane.WARNING_MESSAGE );  					
	}	    

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {
       closeApp();
    }
    
    public void closeApp()
    {
 		if( reg.isExpired() )
 		{
 			showErrorMessage("Your evaluation has expired, bye bye!");
 			System.exit(1);
 		}
 		dispose();
 		jm.setEnabled( true );
 		jm.toFront();    	
    }
    
    
    public void keyPressed( KeyEvent e )
    {
    }
    
    public void keyReleased( KeyEvent e )
    {
    	if( txtUsername.getText().trim().length() > 0 && txtEmail.getText().trim().length() > 0 )
    	{	
    		try
    		{
  				txtChallenge.setText( reg.getChallengeKey( txtUsername.getText(), txtEmail.getText() ) );
    		}
    		catch( Exception iae )
    		{
    		}
    	}
    }
    
    public void keyTyped( KeyEvent e )
    {	
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnUnregister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jpRegistration;
    private javax.swing.JTextField txtChallenge;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtRegKey;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration

}
